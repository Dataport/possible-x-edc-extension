# Default values for possible-x-edc
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ghcr.io/possible-x/connector
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

imagePullSecrets:
  - name: "github-registry-auth"

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: LoadBalancer
  apiPort: 8181
  managementPort: 8182
  protocolPort: 8281
  publicPort: 8282
  controlPort: 8283

ingress:
  enabled: false
  className: ""
  annotations:
    acme.cert-manager.io/http01-edit-in-place: "true"
    cert-manager.io/cluster-issuer: cluster-issuer-letsencrypt
    kubernetes.io/ingress.allow-http: "true"
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/proxy-body-size: 1024m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    nginx.ingress.kubernetes.io/session-cookie-expires: "172800"
    nginx.ingress.kubernetes.io/session-cookie-max-age: "172800"
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    #nginx.ingress.kubernetes.io/cors-allow-origin: "https://possible.fokus.fraunhofer.de"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-methods: "PUT, GET, POST, OPTIONS, POST"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
    nginx.ingress.kubernetes.io/cors-allow-headers: "x-api-key, content-type"

  hosts:
    - host: provider.possible-x.de
      paths:
        - path: /api
          portNumber: 8181
          pathType: Prefix

        - path: /management
          portNumber: 8182
          pathType: Prefix

        - path: /protocol
          portNumber: 8281
          pathType: Prefix

        - path: /public
          portNumber: 8282
          pathType: Prefix

        - path: /control
          portNumber: 8283
          pathType: Prefix

  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

web:
  http:
    port: 8181
    path: /api
    management:
      port: 8182
      path: /management
    protocol:
      port: 8281
      path: /protocol
    public:
      port: 8282
      path: /public
    control:
      port: 8283
      path: /control
edc:
  participant:
    id: provider
  api:
    auth:
      key: password
  vault:
    clientid: company1
    tenantid: 1
    certificate: /resources/
    hashicorp:
      url: http://vault:8200
      token:
      timeout:
        seconds: 30
  ids:
    id: urn:connector:provider
  ionos:
    endpoint: s3-eu-central-1.ionoscloud.com
    accessKey: notnull
    secretKey: notnull
    token: notnull
  dsp:
    callback:
      address: http://localhost
  receiver:
    http:
      endpoint: http://localhost:4000
  public:
    key:
      alias: alias
  dataplane:
    token:
      validation:
        endpoint: http://localhost
possible:
  catalog:
    endpoint: https://possible.fokus.fraunhofer.de/api/hub/repo/catalogues/test-provider/datasets/origin
    jwt:
      token: notnull
  connector:
    edcVersion: 0.1.2

persistence:
  db:
    enabled: false
    image:
      repository: postgres
      pullPolicy: IfNotPresent
      tag: latest
    databaseUser: "admin"
    databaseName: "edc"
    databasePasswordSecretName: ""
    storageSize: 1Gi
    pgAdmin:
      enabled: false
      pgAdminEmail: ""
      pgAdminPasswordSecretName: ""
      ingress:
        enabled: false
        className: nginx
        hosts: []
        tls:
        - hosts: []
          secretName: ""